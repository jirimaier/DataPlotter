name: Build OBS Bundle and Upload

on:
  workflow_dispatch: # Manual triggering
  workflow_call:     # Allow this workflow to be called by other workflows

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Install osc from PyPI
      run: |
        pip install --upgrade pip
        pip install osc

    - name: Install Dependencies
      run: |
        sudo apt update && sudo apt install -y --no-install-recommends \
          qtbase5-dev \
          qtchooser \
          qtdeclarative5-dev \
          libqt5quick5 \
          libqt5quickcontrols2-5 \
          libqt5serialport5-dev \
          mesa-common-dev \
          libglu1-mesa-dev \
          qtquickcontrols2-5-dev \
          libqt5opengl5-dev \
          qt5dxcb-plugin \
          libxcb-util-dev \
          build-essential \
          cmake \
          ninja-build \
          pkg-config \
          qttools5-dev \
          qttools5-dev-tools \
          gtk-update-icon-cache \
          fuse libfuse2 \
          zsync file appstream

    - name: Configure and build CMake target
      run: |
        mkdir -p build
        cd build
        cmake .. -DDEV_MODE=true
        cmake --build . --target open_build_service_bundle

    - name: Configure osc credentials
      run: |
        mkdir -p ~/.config/osc
        cat <<EOF > ~/.config/osc/oscrc
        [general]
        apiurl = https://api.opensuse.org
        [https://api.opensuse.org]
        user = ${OBS_USERNAME}
        pass = ${OBS_PASSWORD}
        EOF
        chmod 600 ~/.config/osc/oscrc
      env:
        OBS_USERNAME: ${{ secrets.OBS_USERNAME }}
        OBS_PASSWORD: ${{ secrets.OBS_PASSWORD }}

    - name: Checkout OBS package
      run: |
        osc checkout home:maierjir/data-plotter

    - name: Clean old versioned files in OBS package
      run: |
        cd home:maierjir/data-plotter
        # Remove previous .dsc, .orig.tar.*, .debian.tar.*
        rm -f *.dsc *.orig.tar.* *.debian.tar.* || true
        # Optionally remove other stale artifacts
        rm -f *.spec *.pkg.tar.* || true

    - name: Copy built OBS bundle into package
      run: |
        cp build/target/pkg/* home:maierjir/data-plotter/
        cd home:maierjir/data-plotter
        osc addremove

    - name: Commit and upload to OBS
      run: |
        cd home:maierjir/data-plotter
        osc commit -m "Automated upload from GitHub CI for tag ${{ github.ref_name }}"
